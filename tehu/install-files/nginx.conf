user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
  worker_connections 768;
  # multi_accept on;
}

http {

  ##
  # Basic Settings
  ##

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  # server_tokens off;

  # server_names_hash_bucket_size 64;
  # server_name_in_redirect off;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  charset UTF-8;

  ##
  # SSL Settings
  ##

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  ##
  # Logging Settings
  ##

  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##

  gzip on;
  gzip_disable "msie6";

  # gzip_vary on;
  # gzip_proxied any;
  # gzip_comp_level 6;
  # gzip_buffers 16 8k;
  # gzip_http_version 1.1;
  # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

  ##
  # Virtual Host Configs
  ##

  #include /etc/nginx/conf.d/*.conf;
  #include /etc/nginx/sites-enabled/*;

  server {
    listen 443;
    server_name _;
    ssl on;
    ssl_certificate /etc/ssl/certs/chained.pem;
    ssl_certificate_key /etc/ssl/private/d-hopto-org-certificate-private.key;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA;
    ssl_session_cache shared:SSL:50m;
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
    ssl_prefer_server_ciphers on;

    root /var/www/html;
    index index.html;
    location /stat {
      include uwsgi_params;
      #uwsgi_modifier1 9;
      uwsgi_pass 127.0.0.1:3031;
    }
    location / {
      # First attempt to serve request as file, then
      # as directory, then fall back to displaying a 404.
      try_files $uri $uri/ =404;
    }
  }

  ##
  # You should look at the following URL's in order to grasp a solid understanding
  # of Nginx configuration files in order to fully unleash the power of Nginx.
  # https://www.nginx.com/resources/wiki/start/
  # https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
  # https://wiki.debian.org/Nginx/DirectoryStructure

  server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name _;
    return 301 https://$host$request_uri;
  }

  #server {
  #  listen 80 default_server;
  #  listen [::]:80 default_server;

  #  # listen 443 ssl default_server;
  #  # listen [::]:443 ssl default_server;
  #  root /var/www/html-insecure;

  #  # Add index.php to the list if you are using PHP
  #  index index.html;

  #  server_name _;

  #  location / {
  #    # First attempt to serve request as file, then
  #    # as directory, then fall back to displaying a 404.
  #    try_files $uri $uri/ =404;
  #  }

  #  # pass PHP scripts to FastCGI server
  #  #
  #  #location ~ \.php$ {
  #  #  include snippets/fastcgi-php.conf;
  #  #
  #  #  # With php-fpm (or other unix sockets):
  #  #  fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
  #  #  # With php-cgi (or other tcp sockets):
  #  #  fastcgi_pass 127.0.0.1:9000;
  #  #}

  #  # deny access to .htaccess files, if Apache's document root
  #  # concurs with nginx's one
  #  #
  #  #location ~ /\.ht {
  #  #  deny all;
  #  #}
  #}

}

#vmai  {
#  # See sample authentication script at:
#  # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#  # auth_http localhost/auth.php;
#  # pop3_capabilities "TOP" "USER";
#  # imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#  server {
#    listen     localhost:110;
#    protocol   pop3;
#    proxy      on;
#  }
# 
#  server {
#    listen     localhost:143;
#    protocol   imap;
#    proxy      on;
#  }
#}
